#pragma once

#include "headers.h"

typedef uint64_t hash_t;
const hash_t rand_table[BOARD_SIZE * BOARD_SIZE][2] = {
        {0x653eddf1f1dc10fdul, 0x95a6159531550dd0ul},
        {0x1bbaf74aa46b3f76ul, 0x9b08c28896d1dd98ul},
        {0xca85e6576277aaa7ul, 0x83b3f005c36b962bul},
        {0x1f19e342c5593ae1ul, 0xf8c249df3b55d194ul},
        {0x38e7a7b88866f5cful, 0xe3fd67a35b6f2045ul},
        {0xb84fbb4a303c5002ul, 0x5b93196c27857eccul},
        {0xd1f3d4ae8cacf3e1ul, 0x2bd9757d2ca8b711ul},
        {0x23106b3e9ac4e433ul, 0x204d4b91278e4012ul},
        {0xeb11ef4d31abe916ul, 0x39ede626e9d6e426ul},
        {0x33c79745d87f7192ul, 0x8a3e57fce1ed3ce1ul},
        {0xa14b9fb1a77644e6ul, 0x08e8220146cc5299ul},
        {0x178694a2b46e1e60ul, 0x690cb405bcf8a4e9ul},
        {0x02d7d21545a4b17dul, 0x127f0b70c50023e4ul},
        {0x3fa0c5f77799a4e0ul, 0x677382395e092688ul},
        {0x08480e9ab1a72948ul, 0x47004aa2b2e2f953ul},
        {0x03247b272e5dbf62ul, 0xaadf176292abe9c4ul},
        {0x3313245e88c25850ul, 0xda063360e03e61adul},
        {0x8bc23a023792453cul, 0x43414e630a6e50f3ul},
        {0xd65a8540cc0f10beul, 0x8a881f0660e204f4ul},
        {0x6b887c788da99e3ful, 0x7f04eedd05cf1ebaul},
        {0xec52b1af0dfae899ul, 0x484386b96c34805ful},
        {0xb3cc981a40a01855ul, 0xbd4a36d5b85993baul},
        {0x6ab5a70a68781388ul, 0x4aa56aeef80deceaul},
        {0x59b957a8c5cc1fdful, 0x0879cb293eb0fcfcul},
        {0xc8748db1c23a2fc9ul, 0x59c8256f74a3c84dul},
        {0xa93ac168b8f0e013ul, 0x8fb3b2b4b6b43cf7ul},
        {0xff6b54f09687e1bdul, 0x203a82e399c3602cul},
        {0xf352c87e8e080ae7ul, 0x3ea7380fbda14f81ul},
        {0x4a50ef27a768ecc2ul, 0x115d170729f13b9bul},
        {0x65908589e89f0cb6ul, 0x8344625b1a61400eul},
        {0x77f7c1296ee5d187ul, 0x517122eef68e9455ul},
        {0xfdde7a52c3c05258ul, 0xc4ffd39dc5a25851ul},
        {0x30c2aa949e84ebd2ul, 0xf4c66fa130517a1cul},
        {0x50eb5acc82631d14ul, 0x416c430b1000697bul},
        {0x6b7a85e688d3503ful, 0xf7bfeb30e525ad60ul},
        {0x65fe448239c6a983ul, 0x4f2547651f5e75a4ul},
        {0x0d76982cf9ce8c18ul, 0x4427f7f8612d66feul},
        {0x4bbbc17b769baf82ul, 0xa277f39c7f077132ul},
        {0x0bed33f384703385ul, 0x965864938ee1e88eul},
        {0x2f7c749335b6cb73ul, 0x83dcdfd4c5eadbb6ul},
        {0x9b2c82e1bb14d645ul, 0x834ad3be350a9f92ul},
        {0x7bfa6d65507e1999ul, 0x89df99f27f58db48ul},
        {0xcc17b4e10f6d5bc9ul, 0xfdca00a7af6e346cul},
        {0x48683b57ca5f7fbdul, 0x3e050ea1b7e978fdul},
        {0xe46ec06ac91ca071ul, 0xb328bcb1404cfa5ful},
        {0xa3483cb018c8826cul, 0x27566c64ab8f22b0ul},
        {0xae393f4bae78ee2bul, 0xb79f176904e580beul},
        {0xaa225282da264af9ul, 0x514e98d1f31501bful},
        {0x786b8be97df6f82eul, 0xa9080be74e5630f4ul},
        {0x7ef727b507cebef4ul, 0x4ee0cda85333f63bul},
        {0x9afed9f5e14a03d6ul, 0x54c7c598ef2018f3ul},
        {0x8a818d5594f2fda8ul, 0xfb9363bb62c3ab14ul},
        {0xa8df7b2be4a6417bul, 0x5c393cae535c93ccul},
        {0x214271631cb3e54cul, 0x40275335211b992eul},
        {0xde17cc5621abad19ul, 0x036996b84c979b77ul},
        {0xf0d9244e102a97dcul, 0xf494ee2f96359891ul},
        {0x0d12e306a992fe13ul, 0xd7eeb2ecf0f7b177ul},
        {0x604a6a062a6b7c3dul, 0x7bac887bb435af58ul},
        {0x599fe15425e2b830ul, 0x1ce9c11bc5316914ul},
        {0xf5056afb129c158bul, 0x92ff0438e28e4706ul},
        {0xa4d3aba3d955b3c5ul, 0x9bf3d4c95c9eed30ul},
        {0x77dc3cdbcb476c9bul, 0x42d1bd06056686ceul},
        {0x40622d9aae59d08cul, 0x65e5d5a73a2d0078ul},
        {0xdeb080a42f98f481ul, 0xfe1b314765b78f31ul},
        {0x17d9449b0d199ec7ul, 0x417bab606b6cc48aul},
        {0xa70927c38d6fab2ful, 0x0d05a9bcc9b0262bul},
        {0xad6b4254857e56a9ul, 0xfc5ceae19e4664f0ul},
        {0xa2fbce5c292eb563ul, 0x5743b82164f747d6ul},
        {0xe02df597e92bc418ul, 0x72c6bb7744ec9e03ul},
        {0xc4b89308ff4f3b54ul, 0xea46bdab951f6ad6ul},
        {0x41fd6ae9969ef280ul, 0x4b1c70df1d5d3190ul},
        {0xc1bc8d1a6ebf9371ul, 0x25b024b3d8b64d41ul},
        {0x2c45a8cb14b9d820ul, 0xaad6405971a1abf0ul},
        {0x58b87d2f9f7ea86cul, 0x1da459a209b5c078ul},
        {0xd7e4d79c8a83cb15ul, 0xaba535b1eda508f8ul},
        {0x19f4c067d4c03c73ul, 0x6c8e41addeb80c2eul},
        {0x1099ef3cb21c9501ul, 0x20d46588b75901bbul},
        {0x74fc6c897271b358ul, 0xe0fbaf06f9314e8eul},
        {0x5c968815ea087442ul, 0x762257e77a355d2eul},
        {0x77339c0c026c9c81ul, 0x11505b7d323db2f6ul},
        {0x947645e2996e7b8ful, 0x642648d0f7ed5ae1ul},
        {0x15f372d6b146e22eul, 0xe4a660be66a3e788ul},
        {0x17ebc15089bc6eadul, 0xeeca0b6056c1837aul},
        {0xd6422b33f9e6e88dul, 0x9b238732282bc399ul},
        {0xc451cbfd30a3cd3dul, 0xb8538dd07c87e5c5ul},
        {0x46c155512ad2274aul, 0xc30fb83000af0a76ul},
        {0x5d9617556a0e8fa8ul, 0xe4e01ea3d9b680a8ul},
        {0x0abcf07f215e64c7ul, 0xb91d39dde945873eul},
        {0xc80796dab495bf80ul, 0xa00873dd6a4d1d93ul},
        {0x8eaf26735ee13f30ul, 0x1873b052e975ac46ul},
        {0xfe713597c98dd570ul, 0x3e158d5460bb6dc2ul},
        {0xb08ee66af2fb38fful, 0xa1ac733e52475ed8ul},
        {0x93818d03d919efbaul, 0x07a677b45b0d0c3bul},
        {0xcf6409e4b5629ee2ul, 0xeaca2f18d5e81e35ul},
        {0x650fe3a150e8a4f2ul, 0x31b5c97509846f71ul},
        {0xd36e9cae1662d9edul, 0xc1b7ef8f212141bdul},
        {0x3a7c9455576f9a5dul, 0x490239d4841bef4eul},
        {0xb8ed18f9ecfdd9fbul, 0xa235e15131f9c4baul},
        {0x097ea306fd7ce159ul, 0xf568b952444731c5ul},
        {0x8ed704e66d1bf880ul, 0x925d5228657a57a3ul},
        {0x569acf15df49f097ul, 0xf3284d7a1d916446ul},
        {0x2dd9cc494dc0a568ul, 0x3adb2efd6af11026ul},
        {0xa26dc1ea539f1d3cul, 0x658a450cb3476edful},
        {0xa4b8b71b28cff130ul, 0x991a46ff7a00536aul},
        {0xf8a99bcc3d82c940ul, 0x3465e01b75cf37eful},
        {0xcd72bc8fcecb8c11ul, 0x63e270529f2ae3e8ul},
        {0x10a6001eb88b33d9ul, 0x19105c6efa8e0ca4ul},
        {0x6666243b6a2ab9a4ul, 0xd0e43c71c4e4b28dul},
        {0xf36478e5124d0928ul, 0xe9a35a7e653faf99ul},
        {0x7a40320c33ecf592ul, 0x1dba93c32fe4e6abul},
        {0x207dbe2a9661d3f8ul, 0x8e44402da30ac920ul},
        {0x82201f98d7334359ul, 0xe4b0c0a255734b06ul},
        {0x51f511b81ec7fe61ul, 0x114d7a1be12961c9ul},
        {0xf3f9bd79ef361e88ul, 0x9ee58ff6f9340ec1ul},
        {0x6cf016fedf60a2ddul, 0x24284163497a84f2ul},
        {0x7d269344ccf95b44ul, 0x9bcb2249dbe608dbul},
        {0x8c45d1ccd0cf39baul, 0x8f28dc7074247198ul},
        {0x8fc5a3425853c66cul, 0xd2bfe5d7c3f91491ul},
        {0xde13b5dc5dda4939ul, 0x0e0e1b11679a271aul},
        {0xbd9bcff87abfb74eul, 0xe091725740e486c1ul},
        {0xd177431954677111ul, 0xf57c7fc836f79af5ul}
};

hash_t init_hash(board_t white, board_t black) {
    int i;
    hash_t hash = 0;
    for (i = 0; i < BOARD_SIZE * BOARD_SIZE; ++i) {
        if (black & B_SINGLE_BIT[i]) {
            hash ^= rand_table[i][C_BLACK];
        }
        if (white & B_SINGLE_BIT[i]) {
            hash ^= rand_table[i][C_WHITE];
        }
    }

    return hash;
}